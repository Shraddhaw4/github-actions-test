name: Terraform CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch: # Allows manual triggering of the apply step

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.7 # Specify your Terraform version

      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  approve:
    runs-on: ubuntu-latest
    needs: plan
    if: ${{ github.event_name == 'workflow_dispatch' }} # Only run on manual dispatch
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Request Approval
        id: approval
        run: |
          echo "Approval needed to apply changes. Please review the plan."
          echo "To approve, set the input 'approve' to 'yes'."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  apply:
    runs-on: ubuntu-latest
    needs: approve
    if: ${{ github.event.inputs.approve == 'yes' }} # Check if approval is granted
    steps:
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Apply
        run: terraform apply tfplan
        env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  notify:
    runs-on: ubuntu-latest
    needs: approve
    if: needs.approve.outputs.approval == 'true'
    steps:
      - name: Notify Success
        run: echo "Terraform apply was successful."
